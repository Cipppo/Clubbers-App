plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'

    // Hilt plugin
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'

    // KSP plugin
    id 'com.google.devtools.ksp'

    // Secrets Gradle Plugin
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
}

android {
    namespace 'com.example.clubbers'
    compileSdk 33

    defaultConfig {
        applicationId "com.example.clubbers"
        minSdk 26
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.2.0'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.10.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'
    implementation 'androidx.activity:activity-compose:1.7.1'
    implementation platform('androidx.compose:compose-bom:2022.10.00')
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.ui:ui-graphics:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.compose.material3:material3'
    implementation 'com.google.android.gms:play-services-places:17.0.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation platform('androidx.compose:compose-bom:2022.10.00')
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"

    // Material 3 dependencies
    implementation "androidx.compose.material3:material3:1.0.1"

    // Hilt dependencies
    implementation "com.google.dagger:hilt-android:2.44.2"
    kapt "com.google.dagger:hilt-android-compiler:2.44"

    // Hilt Navigation Compose dependencies
    implementation "androidx.hilt:hilt-navigation-compose:1.0.0"

    // Room dependencies
    def room_version = "2.5.1"

    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    // To use Kotlin Symbol Processing (KSP)
    ksp "androidx.room:room-compiler:$room_version"
    // Optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    // Navigation dependencies
    def nav_version = "2.5.3"
    implementation "androidx.navigation:navigation-compose:$nav_version"

    // Coil (image loading) dependencies
    implementation "io.coil-kt:coil-compose:2.3.0"

    // Google Maps dependencies
    implementation "com.google.android.gms:play-services-maps:18.1.0"
    implementation "com.google.maps.android:maps-compose:2.2.0"

    implementation 'androidx.activity:activity-compose:1.4.0-alpha01'
}

// RoomSchema: Enable Room schema export
class RoomSchemaArgProvider implements CommandLineArgumentProvider {

    @InputDirectory
    @PathSensitive(PathSensitivity.RELATIVE)
    File schemaDir

    RoomSchemaArgProvider(File schemaDir) {
        this.schemaDir = schemaDir
    }

    @Override
    Iterable<String> asArguments() {
        // Note: If you're using KSP, change the line below to return
        // ["room.schemaLocation=${schemaDir.path}"].
        return ["room.schemaLocation=${schemaDir.path}"]
    }
}

// RoomSchema: For KSP, configure using KSP extension:
ksp {
    arg(new RoomSchemaArgProvider(new File(projectDir, "schemas")))
}

// Hilt: Allow references to generated code
kapt {
    correctErrorTypes true
}
